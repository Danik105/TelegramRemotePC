import telebot
from io import StringIO
import sys
import os
import subprocess
from subprocess import Popen, PIPE
import config
from ctypes import *
import pyautogui
import datetime
from pymsgbox import *
from PIL import ImageGrab

from telebot import types

    
bot = telebot.TeleBot(config.TOKEN)

aut = []


@bot.message_handler(commands=['srt'])
def welcome(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å :",
        parse_mode='html')
    bot.register_next_step_handler(message, lala)


@bot.message_handler(commands=['login'])
def lala(message):
    try:
        user1 = message.text.split(" ")[1]
        password = ("12345")
        if user1 != password:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –ø–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π")
            bot.register_next_step_handler(message, lala)
        if user1 == password:
            aut.append(message.from_user.id)
            bot.send_message(message.chat.id, "‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω")
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("üåÖ –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
            item2 = types.KeyboardButton("üõë –í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")
            item3 = types.KeyboardButton("‚ùï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
            item4 = types.KeyboardButton("üîê –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä")
            item5 = types.KeyboardButton("‚≠ïÔ∏è –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")
            item6 = types.KeyboardButton("üõ† –î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á")
            item7 = types.KeyboardButton("‚§µÔ∏è –ù–∞–∑–∞–¥")
            markup.add(item1,item2,item3,item4,item5,item6,item7)
            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name} üòÑ\n–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ—è :".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)
            bot.register_next_step_handler(message, la123)
    except Exception as ex:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –ø–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π")



@bot.callback_query_handler(func=lambda call: True)
def reg_soobje(message):
    if message.text == '‚§µÔ∏è –ù–∞–∑–∞–¥':
        bot.register_next_step_handler(message, la123)
        bot.send_message(message.chat.id, "‚ùå –î–µ–π–≤—Å—Ç–∏–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    else:
        soob = message.text
        alert(text=soob, title="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", button='OK')
        bot.send_message(message.chat.id, "‚úÖ –£—Å–ø–µ—à–Ω–æ")
        bot.register_next_step_handler(message, la123)
def reg_soob(message):
    if message.text == '‚§µÔ∏è –ù–∞–∑–∞–¥':
        bot.register_next_step_handler(message, la123)
        bot.send_message(message.chat.id, "‚ùå –û—Ç–º–µ–Ω–∞")
    else:  
        bob = message.text
        os.system("taskkill /im "+ bob + (".exe"))
        bot.send_message(message.chat.id, "‚úÖ –£—Å–ø–µ—à–Ω–æ")
        bot.register_next_step_handler(message, reg_soob)


@bot.message_handler(content_types=['text'])
def la123(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if message.chat.type == 'private' and message.from_user.id in aut: 
        if message.text == 'üåÖ –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç':
            im2 = ImageGrab.grab()
            filename = 'screenshot_' + datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S") + '.png'
            im2.save(filename)
            p = open(filename, 'rb')
            bot.send_photo(message.chat.id, p)
            bot.send_message(message.chat.id, "‚úÖ –£—Å–ø–µ—à–Ω–æ", reply_markup=markup)
        elif message.text == 'üõë –í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞':
            os.system('shutdown -s')
            bot.send_message(message.chat.id, "‚úÖ –£—Å–ø–µ—à–Ω–æ")
        elif message.text == '‚≠ïÔ∏è –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞':
            os.system( "shutdown /s" )
            bot.send_message(message.chat.id, "‚úÖ –£—Å–ø–µ—à–Ω–æ")
        elif message.text == '‚ùï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ':
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ :")
            bot.register_next_step_handler(message, reg_soobje)
        elif message.text == 'üîê –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä':
            user32=windll.LoadLibrary('user32.dll')
            user32.LockWorkStation()
            bot.send_message(message.chat.id, "‚úÖ –£—Å–ø–µ—à–Ω–æ")
        elif message.text == 'üõ† –î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á':
            bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ—Å –∑–∞–∫—Ä—ã—Ç—å :")
            bot.register_next_step_handler(message, reg_soob)
        elif message.text == '‚§µÔ∏è –ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, "‚úÖ –£—Å–ø–µ—à–Ω–æ")
        else:
            bot.send_message(message.chat.id, '–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–º–∞–Ω–¥—ã')
    else:
        bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã! \n–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ: /login "–ø–∞—Ä–æ–ª—å"')
# RUN
bot.polling(none_stop=True)